{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    //
    // NOTE for JLink users:
    //
    //    Please create the following setting in your VSCode User Settings or in
    //    your global PATH.  Cortex-Debug needs to find the specific gdb-server
    //    you want to use.
    //
    //       Windows     : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServerCL"
    //       Linux / Mac : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServer"
    //
    //    User settings are located in:
    //
    //       Windows : %APPDATA%/Code/User/settings.json
    //       Mac     : $HOME/Library/Application Support/Code/User/settings.json
    //       Linux   : $HOME/.config/Code/User/settings.json
    //
    //    You can use the VSCode Settings UI to edit the files mentioned above.
    //
    //    For the JLink configurations in this file, the "device" name comes from
    //    the list found here:
    //       https://www.segger.com/downloads/supported-devices.php
    //
    //    To use JLink JTAG interface, update corresponding JLink configuration.
    //    Set "interface" property to "jtag".
    //
    "version": "0.2.0",
    "configurations": [
        // When using 'launch', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Launch 43907 CR4 (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "CYW43907",
            "interface": "jtag",
            "overrideRestartCommands": [
                "starti"
            ],
            "runToEntryPoint": "main",    // Specifies application entry point name where program will halt
            "showDevDebugOutput": "none"
        },
        {
            "name": "Erase (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            // executable not needed but need some valid file to get the session to start
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "CYW43907",
            "interface": "jtag",
            "overrideLaunchCommands": [
                "monitor exec EnableEraseAllFlashBanks", // enable erasing of external memory
                "monitor reset",      // Perform pre-reset
                "monitor flash erase",
                "monitor reset"       // Perform post-erase reset
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "showDevDebugOutput": "none"
        },
        {
            "name": "Program (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            // executable not needed but need some valid file to get the session to start
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "CYW43907",
            "interface": "jtag",
            "overrideLaunchCommands": [
                "monitor reset",      // Perform pre-reset
                "mon loadbin &&_MTB_RECIPE__HEX_FILE&& 0x14000000",
                "monitor reset",      // Perform post-program reset
                "monitor go"
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "preLaunchTask": "Build",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": "none"
        }
    ]
}
