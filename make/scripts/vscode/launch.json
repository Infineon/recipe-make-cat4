{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    //
    // NOTE for JLink users:
    //
    //    Please create the following setting in your VSCode User Settings or in
    //    your global PATH.  Cortex-Debug needs to find the specific gdb-server
    //    you want to use.
    //
    //       Windows     : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServerCL"
    //       Linux / Mac : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServer"
    //
    //    User settings are located in:
    //
    //       Windows : %APPDATA%/Code/User/settings.json
    //       Mac     : $HOME/Library/Application Support/Code/User/settings.json
    //       Linux   : $HOME/.config/Code/User/settings.json
    //
    //    You can use the VSCode Settings UI to edit the files mentioned above.
    //
    //    For the JLink configurations in this file, the "device" name comes from
    //    the list found here:
    //       https://www.segger.com/downloads/supported-devices.php
    //
    "version": "0.2.0",
    "configurations": [
        // When using 'launch', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Launch 43907 CR4 (FTDI)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_ELF_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "openOCDLaunchCommands": [
                "init_debug_session"
            ],
            "overrideLaunchCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "set remotetimeout 15",
                "monitor reset init"
            ],
            "postStartSessionCommands": [       // Needed if runToMain is false
                // Following two commands are needed to get gdb and openocd and HW all in sync.
                // Or, execution context (PC, stack, registers, etc.) look like they are from before reset.
                // The stepi, is a pretend instruction that does not actually do a stepi, but MUST be done
                // Its a documented workaround in openocd. Do a 'monitor help' to see more info
                //
                // An alternative command to use is "continue" instead of the following two
                "monitor gdb_sync",
                "stepi"
            ],
            "overrideRestartCommands": [
                "start"
            ],
            "postRestartSessionCommands": [
                "monitor gdb_sync",
                "stepi"
            ],
            "runToMain": true,          // if true, program will halt at main. Not used for a restart
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Erase (FTDI)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "openOCDLaunchCommands": [
                "init_debug_session"
            ],
            "overrideLaunchCommands": [
                "monitor erase_all",
                "quit"
            ],
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Program (FTDI)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "openOCDLaunchCommands": [
                "init_debug_session"
            ],
            "overrideLaunchCommands": [
                "monitor program &&CY_HEX_FILE&& reset",
                "quit"
            ],
            "preLaunchTask": "Build: Build [&&CY_CONFIG&&]",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        // When using 'launch', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Launch 43907 CR4 (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_ELF_FILE&&",
            "servertype": "jlink",
            "device": "CYW43907",
            "overrideRestartCommands": [
                "start"
            ],
            "demangle": true,
            "runToMain": true,          // if true, program will halt at main. Not used for a restart
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Erase (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            // executable not needed but need some valid file to get the session to start
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "jlink",
            "device": "CYW43907",
            "overrideLaunchCommands": [
                "monitor exec EnableEraseAllFlashBanks", // enable erasing of external memory
                "monitor reset",      // Perform pre-reset
                "monitor flash erase",
                "monitor reset",      // Perform post-erase reset
                "quit"
            ],
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Program (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            // Program via the hex file to get complete coverage, no need for symbols
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "jlink",
            "device": "CYW43907",
            "overrideLaunchCommands": [
                "monitor reset",      // Perform pre-reset
                "mon loadbin &&CY_HEX_FILE&& 0x14000000",
                "monitor reset",      // Perform post-program reset
                "monitor go",
                "quit"
            ],
            "preLaunchTask": "Build: Build [&&CY_CONFIG&&]",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        }
    ]
}
